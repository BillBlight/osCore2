--- OpenSim/Region/Framework/Scenes/ScenePresence.cs
+++ OpenSim/Region/Framework/Scenes/ScenePresence.cs
@@ -2587,12 +2566,11 @@ namespace OpenSim.Region.Framework.Scenes
                 }
 
                 bool update_movementflag = false;
-                bool mvToTarget = m_movingToTarget;
+                bool mvToTarget = MovingToTarget;
                 if (agentData.UseClientAgentPosition)
                 {
-                    m_movingToTarget = (agentData.ClientAgentPosition - AbsolutePosition).LengthSquared() > 0.04f;
-                    m_moveToPositionTarget = agentData.ClientAgentPosition;
-                    m_moveToSpeed = -1f;
+                    MovingToTarget = (agentData.ClientAgentPosition - AbsolutePosition).LengthSquared() > 0.04f;
+                    MoveToPositionTarget = agentData.ClientAgentPosition;
                 }
 
                 int i = 0;
@@ -3074,36 +3055,30 @@ namespace OpenSim.Region.Framework.Scenes
 //                "[SCENE PRESENCE]: Avatar {0} set move to target {1} (terrain height {2}) in {3}",
 //                Name, pos, terrainHeight, m_scene.RegionInfo.RegionName);
 
-            terrainHeight += Appearance.AvatarHeight; // so 1.5 * AvatarHeight above ground at target
             bool shouldfly = Flying;
             if (noFly)
                 shouldfly = false;
             else if (pos.Z > terrainHeight || Flying)
                 shouldfly = true;
 
+            LandAtTarget = landAtTarget;
+            MovingToTarget = true;
+            MoveToPositionTarget = pos;
+            Flying = shouldfly;
+
+            // Rotate presence around the z-axis to point in same direction as movement.
+            // Ignore z component of vector
             Vector3 localVectorToTarget3D = pos - AbsolutePosition;
 
 //            m_log.DebugFormat("[SCENE PRESENCE]: Local vector to target is {0},[1}", localVectorToTarget3D.X,localVectorToTarget3D.Y);
- 
-            m_movingToTarget = true;
-            LandAtTarget = landAtTarget;
-            m_moveToPositionTarget = pos;
-            if(tau > 0)
-            {
-                if(tau < Scene.FrameTime)
-                    tau = Scene.FrameTime;
-                m_moveToSpeed = localVectorToTarget3D.Length() / tau;
-                if(m_moveToSpeed < 0.5f) //to tune
-                    m_moveToSpeed = 0.5f;
-                else if(m_moveToSpeed > 50f)
-                    m_moveToSpeed = 50f;
 
-                SetAlwaysRun = false;
-            }
-            else
-                m_moveToSpeed = 4.096f * m_speedModifier;
+            // Calculate the yaw.
+            Vector3 angle = new Vector3(0, 0, (float)(Math.Atan2(localVectorToTarget3D.Y, localVectorToTarget3D.X)));
+
+//            m_log.DebugFormat("[SCENE PRESENCE]: Angle is {0}", angle);
 
-            Flying = shouldfly;
+            Rotation = Quaternion.CreateFromEulers(angle);
+//            m_log.DebugFormat("[SCENE PRESENCE]: Body rot for {0} set to {1}", Name, Rotation);
 
             Vector3 control = Vector3.Zero;
             if(HandleMoveToTargetUpdate(1f, ref control))
